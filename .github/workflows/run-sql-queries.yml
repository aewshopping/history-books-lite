name: Run sql queries
# note must run AFTER data.db is created on data-output branch!

on:
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write

jobs:
  process_all_files:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout data-output branch (for data.db and results)
      uses: actions/checkout@v4
      with:
        ref: data-output

    - name: Checkout main branch (for SQL queries)
      uses: actions/checkout@v4
      with:
        ref: main
        path: main-branch # This will checkout 'main' into a new directory called 'main-branch'

    - name: Install jq (Global for all runs)
      run: |
        set -eo pipefail # Apply to this setup step as well
        # Install jq (JSON processor for shell scripting)
        echo "Installing jq..."
        sudo apt-get update && sudo apt-get install -y jq
        jq --version
      shell: bash

    - name: run sql queries from files
      run: |
        # Create the result directory if it doesn't exist
        mkdir -p sql-query/result

        echo "Running buildcats.sql with jq fromjson for escaped json string inside arrays"
        # Explicitly reference data.db in the current working directory as we don't have a path to data-output so can use ./
        # noting that the jq stuff is to json stringify stuff within arrays which otherwise gets returned as a weird string with lots of double quotes
        sqlite3 ./data.db < main-branch/sql-query/buildcats.sql | jq '.[] |= with_entries(.value |= (fromjson? // .))' > sql-query/result/buildcats.json

        echo "Running latest100.sql"
        sqlite3 ./data.db < main-branch/sql-query/latest100.sql > sql-query/result/latest100.json

    - name: Commit and push
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add sql-query/result/*.json # Only add the result JSON files
        timestamp=$(date -u)
        git commit -m "${timestamp}" || exit 0
        git pull --rebase origin data-output # Rebase against data-output
        git push origin data-output # Push back to the data-output branch
